{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodoPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","TodoForm","props","ref","useRef","type","name","id","placeholder","onKeyPress","event","key","onAdd","current","value","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","join","checked","onChange","title","preventDefault","removeHandler","TodoPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","newTodo","Date","now","prev","console","log","window","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da4023bf.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Navbar: React.FC = () => {\n\n  return (\n    <nav>\n    <div className=\"nav-wrapper blue-grey lighten-1 px1\">\n      <a href=\"/\" className=\"brand-logo\">React + TS</a>\n      <ul  className=\"right hide-on-med-and-down\">\n        <li><NavLink to=\"/\">Todo list</NavLink></li>\n        <li><NavLink to=\"/about\">Info</NavLink></li>\n      </ul>\n    </div>\n  </nav>\n  )\n}\n\nexport default Navbar","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nconst AboutPage: React.FC = () => {\n  const history = useHistory()\n\n  return (\n    <>\n      <h1>Info page</h1>\n      <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Optio commodi fugiat quis similique id expedita? Totam, error eum aliquid odit soluta id, eligendi quia ducimus maiores, tenetur fuga laudantium. Temporibus.</p>\n      <button className='btn blue-grey' onClick={() => history.push('/')}>To todos list</button>\n    </>\n  )\n}\n\n\nexport default AboutPage;","import React, { useRef } from 'react'\n// import { useState } from 'react'\n\ninterface TodoFormProps {\n  onAdd(title: string): void\n}\n\nconst TodoForm: React.FC<TodoFormProps> = (props) => {\n  // const [title, setTitle] = useState<string>('');\n  const ref = useRef<HTMLInputElement>(null)\n\n\n  // const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setTitle(event.target.value)\n  // }\n\n  const keyPressHandler = (event: React.KeyboardEvent) =>  {\n    if  (event.key === 'Enter') {\n      props.onAdd(ref.current!.value)\n      ref.current!.value = ''\n      // setTitle('')\n    }\n\n  }\n  return (\n<div className=\"input-field mt2\">\n    <input\n      // onChange={changeHandler}\n      // value={title}\n      ref={ref}\n      type=\"text\"\n      name=\"\"\n      id=\"title\"\n      placeholder='add todo'\n      onKeyPress={keyPressHandler}\n    />\n    <label htmlFor=\"title\" className='active'>What to do?</label>\n</div>\n  )\n}\n\nexport default TodoForm;","import React from 'react'\nimport { ITodo } from '../interfaces'\n\ntype TodoListProps = {\n  todos: ITodo[]\n  onToggle(id: number): void\n  onRemove: (id: number) => void\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onRemove }) => {\n  if (todos.length === 0) {\n    return <p className='center'>No todo!</p>\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault()\n\n    onRemove(id)\n  }\n\n  return (\n    <ul>\n      {todos.map(todo => {\n        const classes = ['todo']\n        if (todo.completed === true) {\n          classes.push('completed')\n        }\n        return (\n          <li className={classes.join(' ')} key={todo.id}>\n            <label>\n              <input type=\"checkbox\" className='color-blue-grey' checked={todo.completed} onChange={() => onToggle(todo.id)}/>\n              <span>{todo.title}</span>\n              <i className='material-icons color-blue-grey' onClick={(event) => removeHandler(event, todo.id)}>delete</i>\n            </label>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default TodoList;","import React, { useState, useEffect } from 'react'\nimport TodoForm from '../components/TodoForm';\nimport TodoList from '../components/TodoList';\nimport { ITodo } from '../interfaces';\n\nconst TodoPage:React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(()=> {\n    const saved  = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\n\n    setTodos(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    }\n    // setTodos([newTodo, ...todos])\n    setTodos(prev => [newTodo, ...prev])\n    console.log(newTodo)\n  }\n\n  const toggleHandler = (id: number) => {\n    setTodos(prev =>\n      prev.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        }\n      }\n      return todo\n    }))\n  }\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = window.confirm(\n      'Are you sure?'\n    )\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id))\n    }\n  }\n\n  return(\n    <React.Fragment>\n      <TodoForm onAdd = {addHandler}/>\n      <TodoList todos={todos} onToggle={toggleHandler} onRemove={removeHandler}/>\n    </React.Fragment>\n  )\n}\n\nexport default TodoPage;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport AboutPage from './pages/AboutPage';\nimport TodoPage from './pages/TodoPage';\n\n\nconst App: React.FC = () => {\n\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <div className='container'>\n        <Switch>\n          <Route component={TodoPage} path='/' exact />\n          <Route component={AboutPage} path='/about'  />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}